services:
  postgres-authentication-service:
    container_name: postgres-authentication-service
    hostname: postgres-authentication-service
    image: postgres:alpine3.17
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: authentication-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_AUTH_METHOD: TRUST
      PGDATA: /data/postgres
    volumes:
      - data-authentication-service:/data/postgres

  authentication-service:
    container_name: authentication-service
    hostname: authentication-service
    image: kazyshi/malurus-authentication-service:0.0.3-SNAPSHOT
    pull_policy: missing
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-authentication-service:5432/authentication-service
    depends_on:
      - postgres-authentication-service
      - api-gateway

  mongo:
    container_name: mongo
    hostname: mongo
    image: mongo:jammy
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongo:/data/db

  user-service:
    container_name: user-service
    hostname: user-service
    image: kazyshi/malurus-user-service:0.0.3-SNAPSHOT
    restart: unless-stopped
    pull_policy: missing
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - api-gateway
      - redis

  postgres-social-graph-service:
    container_name: postgres-social-graph-service
    hostname: postgres-social-graph-service
    image: postgres:alpine3.17
    restart: unless-stopped
    ports:
      - 5433:5432
    environment:
      POSTGRES_DB: social-graph-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_AUTH_METHOD: TRUST
      PGDATA: /data/postgres
    volumes:
      - data-social-graph-service:/data/postgres

  social-graph-service:
    container_name: social-graph-service
    hostname: social-graph-service
    image: kazyshi/malurus-social-graph-service:0.0.3-SNAPSHOT
    restart: unless-stopped
    pull_policy: missing
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - postgres-social-graph-service
      - api-gateway
      - redis

  api-gateway:
    container_name: api-gateway
    hostname: api-gateway
    image: kazyshi/malurus-api-gateway:0.0.3-SNAPSHOT
    restart: unless-stopped
    pull_policy: missing
    ports:
      - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server

  discovery-server:
    container_name: discovery-server
    image: kazyshi/malurus-discovery-server:0.0.3-SNAPSHOT
    hostname: discovery-server
    restart: unless-stopped
    pull_policy: missing
    ports:
      - 8761:8761
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
      - zipkin

  config-server:
    container_name: config-server
    hostname: config-server
    image: kazyshi/malurus-spring-cloud-config-server:0.0.3-SNAPSHOT
    restart: unless-stopped
    pull_policy: missing
    ports:
      - 8888:8888

  redis:
    container_name: redis
    image: redis:7.2-rc-alpine3.18
    hostname: redis
    restart: unless-stopped
    pull_policy: missing
    ports:
      - 6379:6379

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    hostname: zipkin
    restart: unless-stopped
    pull_policy: missing
    ports:
      - 9411:9411

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper

volumes:
  data-authentication-service: { }
  data-social-graph-service: { }
  mongo: { }
